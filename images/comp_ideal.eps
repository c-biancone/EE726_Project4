%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 71 360 289
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 5982 6000 1200 pap
%%Page: cds 1
gis
0 1201 5981 4796 clwin
9 1202 5977 4796 clwin
0 1193 5982 4805 clwin
ssls
2238 2802 dlt
-7 7 dlv
-7 4 dlv
-11 0 dlv
-8 -4 dlv
-7 -7 dlv
-3 -11 dlv
0 -7 dlv
3 -11 dlv
7 -7 dlv
8 -4 dlv
11 0 dlv
7 4 dlv
7 7 dlv
dle
65 0 2263 2805 dls
65 0 2263 2784 dls
2364 2823 dlt
7 4 dlv
11 11 dlv
0 -76 dlv
dle
2440 2838 dlt
-8 0 dlv
-7 -4 dlv
-3 -11 dlv
0 -61 dlv
dle
25 0 2411 2813 dls
2759 3178 dlt
-3 7 dlv
-11 4 dlv
-11 0 dlv
-11 -4 dlv
-3 -7 dlv
3 -7 dlv
7 -4 dlv
18 -3 dlv
8 -4 dlv
3 -7 dlv
0 -4 dlv
-3 -7 dlv
-11 -3 dlv
-11 0 dlv
-11 3 dlv
-3 7 dlv
dle
2781 3214 dlt
3 -3 dlv
4 3 dlv
-4 4 dlv
-3 -4 dlv
dle
0 -50 2784 3189 dls
2853 3189 dlt
0 -58 dlv
-4 -10 dlv
-3 -4 dlv
-7 -4 dlv
-11 0 dlv
-8 4 dlv
dle
2853 3178 dlt
-7 7 dlv
-7 4 dlv
-11 0 dlv
-8 -4 dlv
-7 -7 dlv
-3 -11 dlv
0 -7 dlv
3 -11 dlv
7 -7 dlv
8 -3 dlv
11 0 dlv
7 3 dlv
7 7 dlv
dle
2896 3189 dlt
-7 -4 dlv
-7 -7 dlv
-4 -11 dlv
0 -7 dlv
4 -11 dlv
7 -7 dlv
7 -3 dlv
11 0 dlv
7 3 dlv
7 7 dlv
4 11 dlv
0 7 dlv
-4 11 dlv
-7 7 dlv
-7 4 dlv
-11 0 dlv
dle
2950 3189 dlt
0 -36 dlv
4 -11 dlv
7 -3 dlv
11 0 dlv
7 3 dlv
11 11 dlv
dle
0 -50 2990 3189 dls
3022 3214 dlt
0 -61 dlv
4 -11 dlv
7 -3 dlv
7 0 dlv
dle
26 0 3011 3189 dls
58 0 3051 3131 dls
0 -75 3134 3214 dls
3177 3189 dlt
-7 -4 dlv
-7 -7 dlv
-4 -11 dlv
0 -7 dlv
4 -11 dlv
7 -7 dlv
7 -3 dlv
11 0 dlv
7 3 dlv
7 7 dlv
4 11 dlv
0 7 dlv
-4 11 dlv
-7 7 dlv
-7 4 dlv
-11 0 dlv
dle
3228 3189 dlt
14 -50 dlv
14 50 dlv
15 -50 dlv
14 50 dlv
dle
64 0 3311 3182 dls
64 0 3311 3160 dls
3411 3200 dlt
8 3 dlv
10 11 dlv
0 -75 dlv
dle
3483 3214 dlt
-10 -3 dlv
-8 -11 dlv
-3 -18 dlv
0 -11 dlv
3 -18 dlv
8 -11 dlv
10 -3 dlv
8 0 dlv
10 3 dlv
8 11 dlv
3 18 dlv
0 11 dlv
-3 18 dlv
-8 11 dlv
-10 3 dlv
-8 0 dlv
dle
-50 -75 3512 3214 dls
0 -50 3538 3189 dls
3538 3175 dlt
10 10 dlv
8 4 dlv
10 0 dlv
8 -4 dlv
3 -10 dlv
0 -36 dlv
dle
3577 3175 dlt
11 10 dlv
7 4 dlv
11 0 dlv
7 -4 dlv
4 -10 dlv
0 -36 dlv
dle
2731 3292 dlt
-4 7 dlv
-11 4 dlv
-10 0 dlv
-11 -4 dlv
-4 -7 dlv
4 -7 dlv
7 -4 dlv
18 -4 dlv
7 -3 dlv
4 -7 dlv
0 -4 dlv
-4 -7 dlv
-11 -4 dlv
-10 0 dlv
-11 4 dlv
-4 7 dlv
dle
2752 3328 dlt
4 -4 dlv
4 4 dlv
-4 3 dlv
-4 -3 dlv
dle
0 -51 2756 3303 dls
2825 3303 dlt
0 -58 dlv
-4 -11 dlv
-4 -4 dlv
-7 -3 dlv
-11 0 dlv
-7 3 dlv
dle
2825 3292 dlt
-8 7 dlv
-7 4 dlv
-11 0 dlv
-7 -4 dlv
-7 -7 dlv
-4 -11 dlv
0 -7 dlv
4 -11 dlv
7 -7 dlv
7 -4 dlv
11 0 dlv
7 4 dlv
8 7 dlv
dle
2868 3303 dlt
-7 -4 dlv
-8 -7 dlv
-3 -11 dlv
0 -7 dlv
3 -11 dlv
8 -7 dlv
7 -4 dlv
11 0 dlv
7 4 dlv
7 7 dlv
4 11 dlv
0 7 dlv
-4 11 dlv
-7 7 dlv
-7 4 dlv
-11 0 dlv
dle
2922 3303 dlt
0 -36 dlv
3 -11 dlv
8 -4 dlv
10 0 dlv
8 4 dlv
10 11 dlv
dle
0 -51 2961 3303 dls
2994 3328 dlt
0 -61 dlv
3 -11 dlv
8 -4 dlv
7 0 dlv
dle
25 0 2983 3303 dls
57 0 3023 3245 dls
0 -76 3106 3328 dls
3106 3288 dlt
10 11 dlv
8 4 dlv
10 0 dlv
8 -4 dlv
3 -11 dlv
0 -36 dlv
dle
3170 3328 dlt
4 -4 dlv
4 4 dlv
-4 3 dlv
-4 -3 dlv
dle
0 -51 3174 3303 dls
3242 3303 dlt
0 -58 dlv
-3 -11 dlv
-4 -4 dlv
-7 -3 dlv
-11 0 dlv
-7 3 dlv
dle
3242 3292 dlt
-7 7 dlv
-7 4 dlv
-11 0 dlv
-7 -4 dlv
-7 -7 dlv
-4 -11 dlv
0 -7 dlv
4 -11 dlv
7 -7 dlv
7 -4 dlv
11 0 dlv
7 4 dlv
7 7 dlv
dle
0 -76 3271 3328 dls
3271 3288 dlt
11 11 dlv
7 4 dlv
11 0 dlv
7 -4 dlv
4 -11 dlv
0 -36 dlv
dle
65 0 3340 3295 dls
65 0 3340 3274 dls
3441 3313 dlt
7 4 dlv
11 11 dlv
0 -76 dlv
dle
3498 3259 dlt
-3 -3 dlv
3 -4 dlv
4 4 dlv
-4 3 dlv
dle
3574 3303 dlt
-4 -11 dlv
-7 -7 dlv
-11 -4 dlv
-3 0 dlv
-11 4 dlv
-7 7 dlv
-4 11 dlv
0 3 dlv
4 11 dlv
7 7 dlv
11 4 dlv
3 0 dlv
11 -4 dlv
7 -7 dlv
4 -14 dlv
0 -18 dlv
-4 -18 dlv
-7 -11 dlv
-11 -4 dlv
-7 0 dlv
-11 4 dlv
-3 7 dlv
dle
3646 3303 dlt
-4 -11 dlv
-7 -7 dlv
-11 -4 dlv
-3 0 dlv
-11 4 dlv
-7 7 dlv
-4 11 dlv
0 3 dlv
4 11 dlv
7 7 dlv
11 4 dlv
3 0 dlv
11 -4 dlv
7 -7 dlv
4 -14 dlv
0 -18 dlv
-4 -18 dlv
-7 -11 dlv
-11 -4 dlv
-7 0 dlv
-11 4 dlv
-3 7 dlv
dle
1680 3577 dlt
-7 7 dlv
-8 4 dlv
-10 0 dlv
-8 -4 dlv
-7 -7 dlv
-3 -11 dlv
0 -7 dlv
3 -11 dlv
7 -7 dlv
8 -3 dlv
10 0 dlv
8 3 dlv
7 7 dlv
dle
65 0 1705 3581 dls
65 0 1705 3559 dls
1806 3599 dlt
7 4 dlv
11 10 dlv
0 -75 dlv
dle
1882 3613 dlt
-8 0 dlv
-7 -3 dlv
-3 -11 dlv
0 -61 dlv
dle
25 0 1853 3588 dls
2488 3710 dlt
-9 9 dlv
-9 5 dlv
-14 0 dlv
-9 -5 dlv
-9 -9 dlv
-4 -13 dlv
0 -9 dlv
4 -14 dlv
9 -9 dlv
9 -4 dlv
14 0 dlv
9 4 dlv
9 9 dlv
dle
2537 3724 dlt
-9 -5 dlv
-9 -9 dlv
-4 -13 dlv
0 -9 dlv
4 -14 dlv
9 -9 dlv
9 -4 dlv
14 0 dlv
9 4 dlv
9 9 dlv
4 14 dlv
0 9 dlv
-4 13 dlv
-9 9 dlv
-9 5 dlv
-14 0 dlv
dle
0 -63 2605 3724 dls
2605 3706 dlt
13 13 dlv
9 5 dlv
14 0 dlv
9 -5 dlv
5 -13 dlv
0 -45 dlv
dle
2655 3706 dlt
13 13 dlv
9 5 dlv
14 0 dlv
9 -5 dlv
4 -13 dlv
0 -45 dlv
dle
0 -95 2740 3724 dls
2740 3710 dlt
9 9 dlv
9 5 dlv
14 0 dlv
9 -5 dlv
9 -9 dlv
4 -13 dlv
0 -9 dlv
-4 -14 dlv
-9 -9 dlv
-9 -4 dlv
-14 0 dlv
-9 4 dlv
-9 9 dlv
dle
72 0 2812 3652 dls
2961 3710 dlt
-5 9 dlv
-13 5 dlv
-14 0 dlv
-13 -5 dlv
-5 -9 dlv
5 -9 dlv
9 -4 dlv
22 -5 dlv
9 -4 dlv
5 -9 dlv
0 -5 dlv
-5 -9 dlv
-13 -4 dlv
-14 0 dlv
-13 4 dlv
-5 9 dlv
dle
0 -94 2992 3755 dls
3046 3724 dlt
-9 -5 dlv
-9 -9 dlv
-4 -13 dlv
0 -9 dlv
4 -14 dlv
9 -9 dlv
9 -4 dlv
14 0 dlv
9 4 dlv
9 9 dlv
4 14 dlv
0 9 dlv
-4 13 dlv
-9 9 dlv
-9 5 dlv
-14 0 dlv
dle
0 -95 3114 3724 dls
3114 3710 dlt
9 9 dlv
9 5 dlv
13 0 dlv
9 -5 dlv
9 -9 dlv
5 -13 dlv
0 -9 dlv
-5 -14 dlv
-9 -9 dlv
-9 -4 dlv
-13 0 dlv
-9 4 dlv
-9 9 dlv
dle
3195 3697 dlt
54 0 dlv
0 9 dlv
-4 9 dlv
-5 4 dlv
-9 5 dlv
-13 0 dlv
-10 -5 dlv
-9 -9 dlv
-4 -13 dlv
0 -9 dlv
4 -14 dlv
9 -9 dlv
10 -4 dlv
13 0 dlv
9 4 dlv
9 9 dlv
dle
81 0 3353 3715 dls
81 0 3353 3688 dls
3551 3737 dlt
9 5 dlv
13 13 dlv
0 -94 dlv
dle
3641 3755 dlt
-14 -4 dlv
-9 -14 dlv
-4 -22 dlv
0 -14 dlv
4 -22 dlv
9 -14 dlv
14 -4 dlv
9 0 dlv
13 4 dlv
9 14 dlv
5 22 dlv
0 14 dlv
-5 22 dlv
-9 14 dlv
-13 4 dlv
-9 0 dlv
dle
-63 -94 3677 3755 dls
0 -94 3708 3755 dls
-45 -45 3753 3724 dls
32 -36 3726 3697 dls
2201 2962 dlt
-3 7 dlv
-7 7 dlv
-8 4 dlv
-14 0 dlv
-7 -4 dlv
-7 -7 dlv
-4 -7 dlv
-4 -11 dlv
0 -18 dlv
4 -11 dlv
4 -7 dlv
7 -7 dlv
7 -4 dlv
14 0 dlv
8 4 dlv
7 7 dlv
3 7 dlv
dle
2245 2980 dlt
-11 -4 dlv
-7 -11 dlv
-4 -18 dlv
0 -11 dlv
4 -18 dlv
7 -10 dlv
11 -4 dlv
7 0 dlv
11 4 dlv
7 10 dlv
3 18 dlv
0 11 dlv
-3 18 dlv
-7 11 dlv
-11 4 dlv
-7 0 dlv
dle
-50 -76 2273 2980 dls
15 0 2976 3746 dls
0 -76 2983 3746 dls
15 0 2976 3670 dls
3063 3695 dlt
-54 0 dlv
36 51 dlv
0 -76 dlv
dle
3102 3746 dlt
-11 -4 dlv
-7 -11 dlv
-3 -18 dlv
0 -11 dlv
3 -18 dlv
7 -10 dlv
11 -4 dlv
7 0 dlv
11 4 dlv
7 10 dlv
4 18 dlv
0 11 dlv
-4 18 dlv
-7 11 dlv
-11 4 dlv
-7 0 dlv
dle
-50 -76 3131 3746 dls
1870 3453 dlt
-3 8 dlv
-7 7 dlv
-8 3 dlv
-14 0 dlv
-7 -3 dlv
-7 -7 dlv
-4 -8 dlv
-4 -10 dlv
0 -18 dlv
4 -11 dlv
4 -7 dlv
7 -8 dlv
7 -3 dlv
14 0 dlv
8 3 dlv
7 8 dlv
3 7 dlv
dle
1903 3457 dlt
7 4 dlv
11 10 dlv
0 -75 dlv
dle
1752 3150 dlt
29 -76 dlv
29 76 dlv
dle
14 0 1821 3150 dls
0 -76 1828 3150 dls
14 0 1821 3074 dls
1857 3074 dlt
0 76 dlv
50 -76 dlv
0 76 dlv
dle
58 0 1925 3067 dls
2008 3074 dlt
0 76 dlv
29 -76 dlv
29 76 dlv
0 -76 dlv
dle
3663 3320 dlt
-7 -3 dlv
-7 -8 dlv
-4 -7 dlv
-3 -11 dlv
0 -18 dlv
3 -11 dlv
4 -7 dlv
7 -7 dlv
7 -4 dlv
15 0 dlv
7 4 dlv
7 7 dlv
4 7 dlv
3 11 dlv
0 18 dlv
-3 11 dlv
-4 7 dlv
-7 8 dlv
-7 3 dlv
-15 0 dlv
dle
3725 3320 dlt
0 -54 dlv
3 -11 dlv
7 -7 dlv
11 -4 dlv
7 0 dlv
11 4 dlv
7 7 dlv
4 11 dlv
0 54 dlv
dle
0 -76 3818 3320 dls
51 0 3793 3320 dls
57 0 3851 3237 dls
3934 3244 dlt
0 76 dlv
32 0 dlv
11 -3 dlv
3 -4 dlv
4 -7 dlv
0 -11 dlv
-4 -7 dlv
-3 -4 dlv
-11 -4 dlv
-32 0 dlv
dle
2396 3509 dlt
28 -75 dlv
29 75 dlv
dle
14 0 2464 3509 dls
0 -75 2471 3509 dls
14 0 2464 3434 dls
2500 3434 dlt
0 75 dlv
50 -75 dlv
0 75 dlv
dle
58 0 2568 3426 dls
2651 3434 dlt
0 75 dlv
33 0 dlv
11 -3 dlv
3 -4 dlv
4 -7 dlv
0 -11 dlv
-4 -7 dlv
-3 -4 dlv
-11 -3 dlv
-33 0 dlv
dle
529 1589 dpb
529 1760 dpv
633 1760 dpv
718 1674 dpv
633 1589 dpv
dpu
5258 2346 dpb
5258 2516 dpv
5362 2516 dpv
5447 2431 dpv
5362 2346 dpv
dpu
529 2913 dpb
529 3084 dpv
633 3084 dpv
718 2999 dpv
633 2913 dpv
dpu
5258 3103 dpb
5258 3273 dpv
5362 3273 dpv
5447 3188 dpv
5362 3103 dpv
dpu
529 3292 dpb
529 3462 dpv
633 3462 dpv
718 3377 dpv
633 3292 dpv
dpu
529 4048 dpb
529 4219 dpv
633 4219 dpv
718 4134 dpv
633 4048 dpv
dpu
529 4616 dpb
529 4786 dpv
633 4786 dpv
718 4701 dpv
633 4616 dpv
dpu
1096 1674 dlt
0 -283 dlv
dle
1002 1391 dlt
189 -189 dlv
dle
1191 1391 dlt
-189 -189 dlv
dle
189 189 1002 1202 dbu
4974 2431 dlt
0 -284 dlv
dle
4879 2147 dlt
190 -189 dlv
dle
5069 2147 dlt
-190 -189 dlv
dle
189 190 4879 1958 dbu
0 -303 2042 2734 dls
0 -209 2042 2999 dls
2137 2696 dlt
-48 28 dlv
-47 10 dlv
-47 -10 dlv
-48 -28 dlv
dle
-190 0 2137 2790 dls
95 0 2893 2999 dls
379 0 2420 3008 dls
-379 0 3934 3188 dls
379 0 2420 3377 dls
95 0 2893 3377 dls
0 76 2941 3339 dls
2799 3566 dlt
756 -378 dlv
-756 -379 dlv
0 757 dlv
dle
0 302 2042 3642 dls
0 208 2042 3377 dls
1947 3680 dlt
48 -29 dlv
47 -9 dlv
47 9 dlv
48 29 dlv
dle
190 0 1947 3585 dls
1096 4134 dlt
0 -284 dlv
dle
1002 3850 dlt
189 -189 dlv
dle
1191 3850 dlt
-189 -189 dlv
dle
189 189 1002 3661 dbu
1096 4701 dlt
0 -284 dlv
dle
1002 4417 dlt
189 -189 dlv
dle
1191 4417 dlt
-189 -189 dlv
dle
189 189 1002 4228 dbu
378 0 718 1674 dls
0 189 2042 2242 dls
378 0 4974 2431 dls
1324 0 718 2999 dls
378 0 2042 2999 dls
1418 0 3934 3188 dls
1324 0 718 3377 dls
378 0 2042 3377 dls
0 -190 2042 4134 dls
473 0 623 4134 dls
378 0 718 4701 dls
1881 2204 dlt
95 36 dlv
-95 36 dlv
dle
1895 2357 dlt
-9 -9 dlv
-5 -14 dlv
0 -18 dlv
5 -13 dlv
9 -9 dlv
9 0 dlv
9 4 dlv
4 5 dlv
5 9 dlv
9 27 dlv
4 9 dlv
5 4 dlv
9 5 dlv
13 0 dlv
9 -9 dlv
5 -14 dlv
0 -18 dlv
-5 -13 dlv
-9 -9 dlv
dle
1895 2447 dlt
-9 -9 dlv
-5 -13 dlv
0 -18 dlv
5 -14 dlv
9 -9 dlv
9 0 dlv
9 4 dlv
4 5 dlv
5 9 dlv
9 27 dlv
4 9 dlv
5 5 dlv
9 4 dlv
13 0 dlv
9 -9 dlv
5 -13 dlv
0 -18 dlv
-5 -14 dlv
-9 -9 dlv
dle
2108 3906 dlt
95 36 dlv
-95 36 dlv
dle
2122 4059 dlt
-9 -9 dlv
-5 -13 dlv
0 -18 dlv
5 -14 dlv
9 -9 dlv
9 0 dlv
9 5 dlv
4 4 dlv
5 9 dlv
9 27 dlv
4 9 dlv
5 5 dlv
9 4 dlv
13 0 dlv
9 -9 dlv
5 -13 dlv
0 -18 dlv
-5 -14 dlv
-9 -9 dlv
dle
2122 4150 dlt
-9 -10 dlv
-5 -13 dlv
0 -18 dlv
5 -14 dlv
9 -9 dlv
9 0 dlv
9 5 dlv
4 4 dlv
5 9 dlv
9 27 dlv
4 9 dlv
5 5 dlv
9 5 dlv
13 0 dlv
9 -10 dlv
5 -13 dlv
0 -18 dlv
-5 -14 dlv
-9 -9 dlv
dle
164 1722 dlt
36 -95 dlv
36 95 dlv
dle
317 1708 dlt
-9 9 dlv
-13 5 dlv
-18 0 dlv
-14 -5 dlv
-9 -9 dlv
0 -9 dlv
5 -9 dlv
4 -4 dlv
9 -5 dlv
27 -9 dlv
9 -4 dlv
5 -5 dlv
4 -9 dlv
0 -13 dlv
-9 -9 dlv
-13 -5 dlv
-18 0 dlv
-14 5 dlv
-9 9 dlv
dle
408 1708 dlt
-9 9 dlv
-14 5 dlv
-18 0 dlv
-14 -5 dlv
-9 -9 dlv
0 -9 dlv
5 -9 dlv
4 -4 dlv
10 -5 dlv
27 -9 dlv
9 -4 dlv
4 -5 dlv
5 -9 dlv
0 -13 dlv
-9 -9 dlv
-14 -5 dlv
-18 0 dlv
-14 5 dlv
-9 9 dlv
dle
5535 2478 dlt
-9 -4 dlv
-9 -9 dlv
-5 -9 dlv
-4 -14 dlv
0 -22 dlv
4 -14 dlv
5 -9 dlv
9 -9 dlv
9 -4 dlv
18 0 dlv
9 4 dlv
9 9 dlv
4 9 dlv
5 14 dlv
0 22 dlv
-5 14 dlv
-4 9 dlv
-9 9 dlv
-9 4 dlv
-18 0 dlv
dle
5611 2478 dlt
0 -67 dlv
5 -14 dlv
9 -9 dlv
13 -4 dlv
9 0 dlv
14 4 dlv
9 9 dlv
4 14 dlv
0 67 dlv
dle
0 -94 5728 2478 dls
63 0 5697 2478 dls
72 0 5769 2375 dls
5873 2384 dlt
0 94 dlv
36 -94 dlv
36 94 dlv
0 -94 dlv
dle
13 3046 dlt
36 -95 dlv
36 95 dlv
dle
18 0 99 3046 dls
0 -95 108 3046 dls
18 0 99 2951 dls
144 2951 dlt
0 95 dlv
63 -95 dlv
0 95 dlv
dle
72 0 229 2942 dls
333 2951 dlt
0 95 dlv
36 -95 dlv
36 95 dlv
0 -95 dlv
dle
5535 3235 dlt
-9 -5 dlv
-9 -9 dlv
-5 -9 dlv
-4 -13 dlv
0 -23 dlv
4 -13 dlv
5 -9 dlv
9 -9 dlv
9 -5 dlv
18 0 dlv
9 5 dlv
9 9 dlv
4 9 dlv
5 13 dlv
0 23 dlv
-5 13 dlv
-4 9 dlv
-9 9 dlv
-9 5 dlv
-18 0 dlv
dle
5611 3235 dlt
0 -68 dlv
5 -13 dlv
9 -9 dlv
13 -5 dlv
9 0 dlv
14 5 dlv
9 9 dlv
4 13 dlv
0 68 dlv
dle
0 -95 5728 3235 dls
63 0 5697 3235 dls
72 0 5769 3131 dls
5873 3140 dlt
0 95 dlv
40 0 dlv
14 -5 dlv
4 -4 dlv
5 -9 dlv
0 -14 dlv
-5 -9 dlv
-4 -4 dlv
-14 -5 dlv
-40 0 dlv
dle
32 3424 dlt
36 -94 dlv
36 94 dlv
dle
19 0 117 3424 dls
0 -94 127 3424 dls
19 0 117 3330 dls
163 3330 dlt
0 94 dlv
63 -94 dlv
0 94 dlv
dle
72 0 248 3321 dls
352 3330 dlt
0 94 dlv
40 0 dlv
14 -4 dlv
4 -5 dlv
5 -9 dlv
0 -13 dlv
-5 -9 dlv
-4 -5 dlv
-14 -4 dlv
-40 0 dlv
dle
241 4158 dlt
-5 9 dlv
-9 9 dlv
-9 5 dlv
-18 0 dlv
-9 -5 dlv
-9 -9 dlv
-4 -9 dlv
-5 -13 dlv
0 -23 dlv
5 -13 dlv
4 -9 dlv
9 -9 dlv
9 -5 dlv
18 0 dlv
9 5 dlv
9 9 dlv
5 9 dlv
dle
272 4181 dlt
0 -95 dlv
54 0 dlv
dle
0 -95 349 4181 dls
-63 -63 412 4181 dls
40 -54 372 4140 dls
155 4748 dlt
36 -94 dlv
36 94 dlv
dle
249 4654 dlt
0 94 dlv
32 0 dlv
13 -4 dlv
10 -9 dlv
4 -9 dlv
5 -14 dlv
0 -22 dlv
-5 -14 dlv
-4 -9 dlv
-10 -9 dlv
-13 -4 dlv
-32 0 dlv
dle
344 4654 dlt
0 94 dlv
32 0 dlv
13 -4 dlv
9 -9 dlv
5 -9 dlv
4 -14 dlv
0 -22 dlv
-4 -14 dlv
-5 -9 dlv
-9 -9 dlv
-13 -4 dlv
-32 0 dlv
dle
2480 2942 dlt
-3 7 dlv
-11 4 dlv
-11 0 dlv
-11 -4 dlv
-3 -7 dlv
3 -7 dlv
7 -4 dlv
18 -4 dlv
8 -3 dlv
3 -7 dlv
0 -4 dlv
-3 -7 dlv
-11 -4 dlv
-11 0 dlv
-11 4 dlv
-3 7 dlv
dle
2502 2978 dlt
3 -4 dlv
4 4 dlv
-4 3 dlv
-3 -3 dlv
dle
0 -51 2505 2953 dls
2574 2953 dlt
0 -58 dlv
-4 -11 dlv
-3 -3 dlv
-8 -4 dlv
-10 0 dlv
-8 4 dlv
dle
2574 2942 dlt
-7 7 dlv
-8 4 dlv
-10 0 dlv
-8 -4 dlv
-7 -7 dlv
-3 -11 dlv
0 -7 dlv
3 -11 dlv
7 -7 dlv
8 -4 dlv
10 0 dlv
8 4 dlv
7 7 dlv
dle
0 -51 2603 2953 dls
2603 2931 dlt
3 11 dlv
8 7 dlv
7 4 dlv
11 0 dlv
dle
2646 2931 dlt
43 0 dlv
0 7 dlv
-3 7 dlv
-4 4 dlv
-7 4 dlv
-11 0 dlv
-7 -4 dlv
-7 -7 dlv
-4 -11 dlv
0 -7 dlv
4 -11 dlv
7 -7 dlv
7 -4 dlv
11 0 dlv
7 4 dlv
7 7 dlv
dle
2736 2978 dlt
-7 0 dlv
-7 -4 dlv
-4 -11 dlv
0 -61 dlv
dle
25 0 2707 2953 dls
3587 3112 dlt
-4 7 dlv
-11 4 dlv
-10 0 dlv
-11 -4 dlv
-4 -7 dlv
4 -7 dlv
7 -4 dlv
18 -3 dlv
7 -4 dlv
4 -7 dlv
0 -4 dlv
-4 -7 dlv
-11 -4 dlv
-10 0 dlv
-11 4 dlv
-4 7 dlv
dle
3608 3148 dlt
4 -4 dlv
4 4 dlv
-4 4 dlv
-4 -4 dlv
dle
0 -51 3612 3123 dls
3681 3123 dlt
0 -58 dlv
-4 -11 dlv
-4 -3 dlv
-7 -4 dlv
-11 0 dlv
-7 4 dlv
dle
3681 3112 dlt
-8 7 dlv
-7 4 dlv
-11 0 dlv
-7 -4 dlv
-7 -7 dlv
-4 -11 dlv
0 -7 dlv
4 -11 dlv
7 -7 dlv
7 -4 dlv
11 0 dlv
7 4 dlv
8 7 dlv
dle
3724 3123 dlt
-7 -4 dlv
-8 -7 dlv
-3 -11 dlv
0 -7 dlv
3 -11 dlv
8 -7 dlv
7 -4 dlv
11 0 dlv
7 4 dlv
7 7 dlv
4 11 dlv
0 7 dlv
-4 11 dlv
-7 7 dlv
-7 4 dlv
-11 0 dlv
dle
3778 3123 dlt
0 -36 dlv
3 -11 dlv
8 -4 dlv
10 0 dlv
8 4 dlv
10 11 dlv
dle
0 -51 3817 3123 dls
3850 3148 dlt
0 -61 dlv
3 -11 dlv
8 -4 dlv
7 0 dlv
dle
25 0 3839 3123 dls
2499 3301 dlt
-3 7 dlv
-11 4 dlv
-11 0 dlv
-11 -4 dlv
-3 -7 dlv
3 -7 dlv
7 -4 dlv
18 -3 dlv
8 -4 dlv
3 -7 dlv
0 -4 dlv
-3 -7 dlv
-11 -3 dlv
-11 0 dlv
-11 3 dlv
-3 7 dlv
dle
2521 3337 dlt
3 -3 dlv
4 3 dlv
-4 4 dlv
-3 -4 dlv
dle
0 -50 2524 3312 dls
2593 3312 dlt
0 -58 dlv
-4 -10 dlv
-3 -4 dlv
-8 -4 dlv
-10 0 dlv
-8 4 dlv
dle
2593 3301 dlt
-7 7 dlv
-8 4 dlv
-10 0 dlv
-8 -4 dlv
-7 -7 dlv
-3 -11 dlv
0 -7 dlv
3 -11 dlv
7 -7 dlv
8 -3 dlv
10 0 dlv
8 3 dlv
7 7 dlv
dle
2618 3337 dlt
4 -3 dlv
3 3 dlv
-3 4 dlv
-4 -4 dlv
dle
0 -50 2622 3312 dls
0 -50 2650 3312 dls
2650 3298 dlt
11 10 dlv
7 4 dlv
11 0 dlv
7 -4 dlv
4 -10 dlv
0 -36 dlv
dle
1058 1637 1134 1712 dbs
529 1589 dpb
529 1760 dpv
633 1760 dpv
718 1674 dpv
633 1589 dpv
dps
4936 2393 5012 2469 dbs
5258 2346 dpb
5258 2516 dpv
5362 2516 dpv
5447 2431 dpv
5362 2346 dpv
dps
2004 2469 dpb
2080 2469 dpv
2080 2393 dpv
2004 2393 dpv
dps
2004 3036 dpb
2080 3036 dpv
2080 2961 dpv
2004 2961 dpv
dps
529 2913 dpb
529 3084 dpv
633 3084 dpv
718 2999 dpv
633 2913 dpv
dps
5258 3103 dpb
5258 3273 dpv
5362 3273 dpv
5447 3188 dpv
5362 3103 dpv
dps
529 3292 dpb
529 3462 dpv
633 3462 dpv
718 3377 dpv
633 3292 dpv
dps
2382 3339 2458 3415 dbs
2382 2970 2458 3046 dbs
3896 3150 3971 3226 dbs
2080 3907 dpb
2004 3907 dpv
2004 3982 dpv
2080 3982 dpv
dps
2080 3339 dpb
2004 3339 dpv
2004 3415 dpv
2080 3415 dpv
dps
1058 4096 1134 4171 dbs
529 4048 dpb
529 4219 dpv
633 4219 dpv
718 4134 dpv
633 4048 dpv
dps
1058 4663 1134 4739 dbs
529 4616 dpb
529 4786 dpv
633 4786 dpv
718 4701 dpv
633 4616 dpv
dps
0 1193 5982 4806 clwin
gfs
%%Trailer
%%EOF
