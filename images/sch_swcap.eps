%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 24 0 336 361
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 5523 6000 1200 pap
%%Page: cds 1
gis
475 0 5522 6000 clwin
475 0 5523 5998 clwin
475 0 5523 5998 clwin
ssls
0 -45 3304 5439 dls
3304 5426 dlt
10 9 dlv
6 4 dlv
10 0 dlv
6 -4 dlv
3 -9 dlv
0 -32 dlv
dle
3339 5426 dlt
9 9 dlv
7 4 dlv
9 0 dlv
6 -4 dlv
4 -9 dlv
0 -32 dlv
dle
56 0 3399 5432 dls
56 0 3399 5413 dls
3525 5417 dlt
-48 0 dlv
32 44 dlv
0 -67 dlv
dle
3058 5181 dlt
-6 7 dlv
-6 3 dlv
-10 0 dlv
-6 -3 dlv
-7 -7 dlv
-3 -9 dlv
0 -6 dlv
3 -10 dlv
7 -6 dlv
6 -3 dlv
10 0 dlv
6 3 dlv
6 6 dlv
dle
57 0 3080 5184 dls
57 0 3080 5166 dls
3165 5213 dlt
35 0 dlv
-19 -25 dlv
9 0 dlv
7 -4 dlv
3 -3 dlv
3 -9 dlv
0 -6 dlv
-3 -10 dlv
-7 -6 dlv
-9 -3 dlv
-9 0 dlv
-10 3 dlv
-3 3 dlv
-3 6 dlv
dle
3241 5213 dlt
-10 -3 dlv
-6 -10 dlv
-3 -16 dlv
0 -9 dlv
3 -16 dlv
6 -9 dlv
10 -3 dlv
6 0 dlv
9 3 dlv
7 9 dlv
3 16 dlv
0 9 dlv
-3 16 dlv
-7 10 dlv
-9 3 dlv
-6 0 dlv
dle
-44 -66 3266 5213 dls
3291 5153 dlt
-3 -3 dlv
3 -3 dlv
3 3 dlv
-3 3 dlv
dle
3363 5169 dlt
-47 0 dlv
32 44 dlv
0 -66 dlv
dle
3379 5213 dlt
44 0 dlv
-31 -66 dlv
dle
3480 5213 dlt
-32 0 dlv
-3 -29 dlv
3 4 dlv
10 3 dlv
9 0 dlv
10 -3 dlv
6 -7 dlv
3 -9 dlv
0 -6 dlv
-3 -10 dlv
-6 -6 dlv
-10 -3 dlv
-9 0 dlv
-10 3 dlv
-3 3 dlv
-3 6 dlv
dle
3527 5213 dlt
-6 0 dlv
-7 -3 dlv
-3 -10 dlv
0 -53 dlv
dle
22 0 3502 5191 dls
2977 5102 dlt
-3 -19 dlv
0 19 dlv
3 3 dlv
3 -3 dlv
-6 -19 dlv
dle
3005 5102 dlt
-3 -19 dlv
0 19 dlv
3 3 dlv
4 -3 dlv
-7 -19 dlv
dle
3065 5083 dlt
0 -50 dlv
-3 -9 dlv
-3 -4 dlv
-6 -3 dlv
-10 0 dlv
-6 3 dlv
dle
3065 5074 dlt
-6 6 dlv
-6 3 dlv
-10 0 dlv
-6 -3 dlv
-6 -6 dlv
-4 -10 dlv
0 -6 dlv
4 -9 dlv
6 -7 dlv
6 -3 dlv
10 0 dlv
6 3 dlv
6 7 dlv
dle
3134 5061 dlt
-47 0 dlv
32 44 dlv
0 -66 dlv
dle
3188 5105 dlt
-32 0 dlv
-3 -28 dlv
3 3 dlv
10 3 dlv
9 0 dlv
10 -3 dlv
6 -6 dlv
3 -10 dlv
0 -6 dlv
-3 -9 dlv
-6 -7 dlv
-10 -3 dlv
-9 0 dlv
-10 3 dlv
-3 4 dlv
-3 6 dlv
dle
3251 5074 dlt
-6 6 dlv
-7 3 dlv
-9 0 dlv
-6 -3 dlv
-7 -6 dlv
-3 -10 dlv
0 -6 dlv
3 -9 dlv
7 -7 dlv
6 -3 dlv
9 0 dlv
7 3 dlv
6 7 dlv
dle
0 -44 3273 5083 dls
3273 5071 dlt
9 9 dlv
7 3 dlv
9 0 dlv
6 -3 dlv
4 -9 dlv
0 -32 dlv
dle
3308 5071 dlt
9 9 dlv
6 3 dlv
10 0 dlv
6 -3 dlv
3 -9 dlv
0 -32 dlv
dle
3364 5105 dlt
3 -3 dlv
3 3 dlv
-3 3 dlv
-3 -3 dlv
dle
0 -44 3367 5083 dls
0 -44 3393 5083 dls
3393 5071 dlt
9 9 dlv
6 3 dlv
10 0 dlv
6 -3 dlv
3 -9 dlv
0 -32 dlv
dle
3427 5071 dlt
10 9 dlv
6 3 dlv
9 0 dlv
7 -3 dlv
3 -9 dlv
0 -32 dlv
dle
3490 5102 dlt
-3 -19 dlv
0 19 dlv
3 3 dlv
3 -3 dlv
-6 -19 dlv
dle
3518 5102 dlt
-3 -19 dlv
0 19 dlv
3 3 dlv
4 -3 dlv
-7 -19 dlv
dle
3403 4483 dlt
15 -55 dlv
16 55 dlv
16 -55 dlv
16 55 dlv
dle
71 0 3556 4475 dls
71 0 3556 4451 dls
3765 4510 dlt
-40 0 dlv
-4 -35 dlv
4 4 dlv
12 4 dlv
12 0 dlv
12 -4 dlv
8 -8 dlv
4 -12 dlv
0 -8 dlv
-4 -11 dlv
-8 -8 dlv
-12 -4 dlv
-12 0 dlv
-12 4 dlv
-4 4 dlv
-4 8 dlv
dle
3800 4483 dlt
0 -39 dlv
4 -12 dlv
8 -4 dlv
12 0 dlv
8 4 dlv
11 12 dlv
dle
0 -55 3843 4483 dls
0 -83 3465 4676 dls
71 0 3559 4640 dls
71 0 3559 4617 dls
3767 4676 dlt
-39 0 dlv
-4 -36 dlv
4 4 dlv
12 4 dlv
12 0 dlv
12 -4 dlv
7 -8 dlv
4 -11 dlv
0 -8 dlv
-4 -12 dlv
-7 -8 dlv
-12 -4 dlv
-12 0 dlv
-12 4 dlv
-4 4 dlv
-4 8 dlv
dle
3803 4648 dlt
0 -39 dlv
4 -12 dlv
8 -4 dlv
11 0 dlv
8 4 dlv
12 12 dlv
dle
0 -55 3846 4648 dls
0 -55 3456 4813 dls
3456 4798 dlt
12 11 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -11 dlv
0 -40 dlv
dle
3500 4798 dlt
11 11 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -11 dlv
0 -40 dlv
dle
71 0 3637 4806 dls
71 0 3637 4782 dls
3858 4786 dlt
-59 0 dlv
39 55 dlv
0 -83 dlv
dle
3538 4949 dlt
-3 6 dlv
-6 7 dlv
-6 3 dlv
-13 0 dlv
-6 -3 dlv
-6 -7 dlv
-4 -6 dlv
-3 -9 dlv
0 -16 dlv
3 -9 dlv
4 -7 dlv
6 -6 dlv
6 -3 dlv
13 0 dlv
6 3 dlv
6 6 dlv
3 7 dlv
dle
3576 4965 dlt
-9 -3 dlv
-6 -10 dlv
-4 -15 dlv
0 -10 dlv
4 -16 dlv
6 -9 dlv
9 -3 dlv
7 0 dlv
9 3 dlv
6 9 dlv
3 16 dlv
0 10 dlv
-3 15 dlv
-6 10 dlv
-9 3 dlv
-7 0 dlv
dle
-44 -66 3601 4965 dls
3791 5461 dlt
25 -67 dlv
25 67 dlv
dle
44 -67 3854 5461 dls
-44 -67 3898 5461 dls
3311 5328 dlt
26 -66 dlv
25 66 dlv
dle
3418 5319 dlt
-6 6 dlv
-9 3 dlv
-13 0 dlv
-9 -3 dlv
-7 -6 dlv
0 -6 dlv
4 -7 dlv
3 -3 dlv
6 -3 dlv
19 -6 dlv
6 -3 dlv
3 -4 dlv
3 -6 dlv
0 -9 dlv
-6 -7 dlv
-9 -3 dlv
-13 0 dlv
-9 3 dlv
-7 7 dlv
dle
3481 5319 dlt
-6 6 dlv
-9 3 dlv
-13 0 dlv
-9 -3 dlv
-7 -6 dlv
0 -6 dlv
4 -7 dlv
3 -3 dlv
6 -3 dlv
19 -6 dlv
6 -3 dlv
3 -4 dlv
3 -6 dlv
0 -9 dlv
-6 -7 dlv
-9 -3 dlv
-13 0 dlv
-9 3 dlv
-7 7 dlv
dle
0 -44 3800 5067 dls
3800 5054 dlt
10 10 dlv
6 3 dlv
9 0 dlv
7 -3 dlv
3 -10 dlv
0 -31 dlv
dle
3857 5048 dlt
38 0 dlv
0 6 dlv
-4 6 dlv
-3 4 dlv
-6 3 dlv
-10 0 dlv
-6 -3 dlv
-6 -7 dlv
-3 -9 dlv
0 -6 dlv
3 -10 dlv
6 -6 dlv
6 -3 dlv
10 0 dlv
6 3 dlv
7 6 dlv
dle
3920 5089 dlt
0 -54 dlv
3 -9 dlv
6 -3 dlv
6 0 dlv
dle
22 0 3910 5067 dls
3961 5076 dlt
6 3 dlv
9 10 dlv
0 -66 dlv
dle
4024 5089 dlt
-10 -3 dlv
-6 -10 dlv
-3 -16 dlv
0 -9 dlv
3 -16 dlv
6 -9 dlv
10 -3 dlv
6 0 dlv
9 3 dlv
7 9 dlv
3 16 dlv
0 9 dlv
-3 16 dlv
-7 10 dlv
-9 3 dlv
-6 0 dlv
dle
-44 -66 4049 5089 dls
1061 5915 dpb
987 5989 dpv
888 5989 dpv
813 5915 dpv
888 5841 dpv
987 5841 dpv
dpu
3705 5915 dpb
3631 5989 dpv
3531 5989 dpv
3457 5915 dpv
3531 5841 dpv
3631 5841 dpv
dpu
1144 214 dpb
1069 289 dpv
970 289 dpv
896 214 dpv
970 140 dpv
1069 140 dpv
dpu
5109 214 dpb
5035 289 dpv
4936 289 dpv
4862 214 dpv
4936 140 dpv
5035 140 dpv
dpu
896 2288 dpb
896 2437 dpv
987 2437 dpv
1061 2362 dpv
987 2288 dpv
dpu
0 16 1846 2535 dls
83 0 1846 2543 dls
0 16 1929 2535 dls
1846 2595 dlt
4 -12 dlv
12 -8 dlv
19 -4 dlv
12 0 dlv
20 4 dlv
12 8 dlv
4 12 dlv
0 7 dlv
-4 12 dlv
-12 8 dlv
-20 4 dlv
-12 0 dlv
-19 -4 dlv
-12 -8 dlv
-4 -12 dlv
0 -7 dlv
dle
83 -55 1846 2626 dls
0 16 4490 2535 dls
82 0 4490 2543 dls
0 16 4572 2535 dls
4506 2583 dlt
-4 8 dlv
-12 11 dlv
82 0 dlv
dle
0 330 2383 1206 dls
331 0 1639 1701 dls
0 331 2383 1536 dls
331 0 1639 1949 dls
2466 1949 dpb
2457 1991 dpv
2424 2024 dpv
2383 2032 dpv
2342 2024 dpv
2309 1991 dpv
2300 1949 dpv
2309 1908 dpv
2342 1875 dpv
2383 1867 dpv
2424 1875 dpv
2457 1908 dpv
dpu
-83 330 2383 2032 dls
331 0 1639 2362 dls
2466 2362 dpb
2457 2404 dpv
2424 2437 dpv
2383 2445 dpv
2342 2437 dpv
2309 2404 dpv
2300 2362 dpv
2309 2321 dpv
2342 2288 dpv
2383 2280 dpv
2424 2288 dpv
2457 2321 dpv
dpu
1239 909 1970 1536 dbu
0 330 2383 2445 dls
0 -331 2383 3106 dls
0 330 5027 1206 dls
331 0 4283 1701 dls
0 331 5027 1536 dls
331 0 4283 1949 dls
5109 1949 dpb
5101 1991 dpv
5068 2024 dpv
5027 2032 dpv
4985 2024 dpv
4952 1991 dpv
4944 1949 dpv
4952 1908 dpv
4985 1875 dpv
5027 1867 dpv
5068 1875 dpv
5101 1908 dpv
dpu
-248 248 5027 2032 dls
331 0 4283 2362 dls
5109 2362 dpb
5101 2404 dpv
5068 2437 dpv
5027 2445 dpv
4985 2437 dpv
4952 2404 dpv
4944 2362 dpv
4952 2321 dpv
4985 2288 dpv
5027 2280 dpv
5068 2288 dpv
5101 2321 dpv
dpu
1239 909 4614 1536 dbu
0 330 5027 2445 dls
0 -331 5027 3106 dls
0 264 3705 5238 dls
0 182 3705 5006 dls
3622 5271 dlt
50 -25 dlv
66 -8 dlv
50 33 dlv
dle
166 0 3622 5188 dls
2753 1852 dlt
-8 -4 dlv
-4 -12 dlv
0 -12 dlv
4 -12 dlv
8 -4 dlv
8 4 dlv
4 8 dlv
4 20 dlv
3 8 dlv
8 4 dlv
4 0 dlv
8 -4 dlv
4 -12 dlv
0 -12 dlv
-4 -12 dlv
-8 -4 dlv
dle
2741 1875 dlt
55 16 dlv
-55 16 dlv
55 15 dlv
-55 16 dlv
dle
0 63 2804 1954 dls
2753 2084 dlt
-8 -4 dlv
-4 -12 dlv
0 -12 dlv
4 -12 dlv
8 -4 dlv
8 4 dlv
4 8 dlv
4 20 dlv
3 8 dlv
8 4 dlv
4 0 dlv
8 -4 dlv
4 -12 dlv
0 -12 dlv
-4 -12 dlv
-8 -4 dlv
dle
83 0 2741 2111 dls
2753 2111 dlt
-8 8 dlv
-4 8 dlv
0 12 dlv
4 8 dlv
8 7 dlv
12 4 dlv
7 0 dlv
12 -4 dlv
8 -7 dlv
4 -8 dlv
0 -12 dlv
-4 -8 dlv
-8 -8 dlv
dle
2753 2225 dlt
-8 -4 dlv
-4 -11 dlv
0 -12 dlv
4 -12 dlv
8 -4 dlv
8 4 dlv
4 8 dlv
4 19 dlv
3 8 dlv
8 4 dlv
4 0 dlv
8 -4 dlv
4 -11 dlv
0 -12 dlv
-4 -12 dlv
-8 -4 dlv
dle
2713 2257 dlt
67 0 dlv
12 4 dlv
4 8 dlv
0 7 dlv
dle
0 27 2741 2245 dls
0 63 2804 2288 dls
55 0 2741 2379 dls
2757 2379 dlt
-12 12 dlv
-4 7 dlv
0 12 dlv
4 8 dlv
12 4 dlv
39 0 dlv
dle
2753 2497 dlt
-8 -8 dlv
-4 -8 dlv
0 -12 dlv
4 -8 dlv
8 -8 dlv
12 -3 dlv
7 0 dlv
12 3 dlv
8 8 dlv
4 8 dlv
0 12 dlv
-4 8 dlv
-8 8 dlv
dle
5397 1847 dlt
-8 -4 dlv
-4 -11 dlv
0 -12 dlv
4 -12 dlv
8 -4 dlv
7 4 dlv
4 8 dlv
4 20 dlv
4 7 dlv
8 4 dlv
4 0 dlv
8 -4 dlv
4 -11 dlv
0 -12 dlv
-4 -12 dlv
-8 -4 dlv
dle
5385 1871 dlt
55 16 dlv
-55 15 dlv
55 16 dlv
-55 16 dlv
dle
0 63 5448 1950 dls
5397 2080 dlt
-8 -4 dlv
-4 -12 dlv
0 -12 dlv
4 -12 dlv
8 -4 dlv
7 4 dlv
4 8 dlv
4 20 dlv
4 8 dlv
8 4 dlv
4 0 dlv
8 -4 dlv
4 -12 dlv
0 -12 dlv
-4 -12 dlv
-8 -4 dlv
dle
82 0 5385 2107 dls
5397 2107 dlt
-8 8 dlv
-4 8 dlv
0 12 dlv
4 7 dlv
8 8 dlv
11 4 dlv
8 0 dlv
12 -4 dlv
8 -8 dlv
4 -7 dlv
0 -12 dlv
-4 -8 dlv
-8 -8 dlv
dle
5397 2221 dlt
-8 -4 dlv
-4 -12 dlv
0 -11 dlv
4 -12 dlv
8 -4 dlv
7 4 dlv
4 8 dlv
4 19 dlv
4 8 dlv
8 4 dlv
4 0 dlv
8 -4 dlv
4 -12 dlv
0 -11 dlv
-4 -12 dlv
-8 -4 dlv
dle
5357 2253 dlt
67 0 dlv
12 4 dlv
4 7 dlv
0 8 dlv
dle
0 27 5385 2241 dls
0 63 5448 2284 dls
55 0 5385 2375 dls
5401 2375 dlt
-12 11 dlv
-4 8 dlv
0 12 dlv
4 8 dlv
12 4 dlv
39 0 dlv
dle
5385 2465 dlt
4 -8 dlv
8 -8 dlv
11 -4 dlv
8 0 dlv
12 4 dlv
8 8 dlv
4 8 dlv
0 12 dlv
-4 8 dlv
-8 8 dlv
-12 4 dlv
-8 0 dlv
-11 -4 dlv
-8 -8 dlv
-4 -8 dlv
0 -12 dlv
dle
0 -44 3800 4959 dls
3800 4947 dlt
10 9 dlv
6 3 dlv
9 0 dlv
7 -3 dlv
3 -9 dlv
0 -32 dlv
dle
3835 4947 dlt
9 9 dlv
6 3 dlv
10 0 dlv
6 -3 dlv
3 -9 dlv
0 -32 dlv
dle
3891 4981 dlt
4 -3 dlv
3 3 dlv
-3 4 dlv
-4 -4 dlv
dle
0 -44 3895 4959 dls
0 -44 3920 4959 dls
3920 4947 dlt
9 9 dlv
6 3 dlv
10 0 dlv
6 -3 dlv
3 -9 dlv
0 -32 dlv
dle
3954 4947 dlt
10 9 dlv
6 3 dlv
9 0 dlv
7 -3 dlv
3 -9 dlv
0 -32 dlv
dle
4049 4950 dlt
-7 6 dlv
-6 3 dlv
-9 0 dlv
-7 -3 dlv
-6 -6 dlv
-3 -10 dlv
0 -6 dlv
3 -9 dlv
6 -7 dlv
7 -3 dlv
9 0 dlv
6 3 dlv
7 7 dlv
dle
0 -44 4105 4959 dls
4105 4950 dlt
-6 6 dlv
-6 3 dlv
-10 0 dlv
-6 -3 dlv
-6 -6 dlv
-3 -10 dlv
0 -6 dlv
3 -9 dlv
6 -7 dlv
6 -3 dlv
10 0 dlv
6 3 dlv
6 7 dlv
dle
0 -66 4131 4959 dls
4131 4950 dlt
6 6 dlv
6 3 dlv
10 0 dlv
6 -3 dlv
6 -6 dlv
3 -10 dlv
0 -6 dlv
-3 -9 dlv
-6 -7 dlv
-6 -3 dlv
-10 0 dlv
-6 3 dlv
-6 7 dlv
dle
331 0 978 5915 dls
0 413 3705 5502 dls
578 0 1061 2362 dls
413 0 1226 1949 dls
413 0 1226 1701 dls
1322 0 1061 214 dls
0 1074 2383 3106 dls
0 992 2383 214 dls
496 0 3044 5254 dls
1322 0 2383 4180 dls
0 826 3705 4180 dls
3746 4180 dpb
3738 4213 dpv
3705 4221 dpv
3672 4213 dpv
3664 4180 dpv
3672 4147 dpv
3705 4139 dpv
3738 4147 dpv
dps
413 0 3870 1701 dls
413 0 3870 1949 dls
413 0 3870 2362 dls
1322 0 3705 4180 dls
0 1074 5027 3106 dls
0 992 5027 214 dls
3920 1842 dlt
31 -83 dlv
31 83 dlv
dle
4053 1830 dlt
-8 8 dlv
-11 4 dlv
-16 0 dlv
-12 -4 dlv
-8 -8 dlv
0 -8 dlv
4 -8 dlv
4 -4 dlv
8 -4 dlv
24 -7 dlv
7 -4 dlv
4 -4 dlv
4 -8 dlv
0 -12 dlv
-8 -8 dlv
-11 -4 dlv
-16 0 dlv
-12 4 dlv
-8 8 dlv
dle
4132 1830 dlt
-8 8 dlv
-12 4 dlv
-15 0 dlv
-12 -4 dlv
-8 -8 dlv
0 -8 dlv
4 -8 dlv
4 -4 dlv
8 -4 dlv
23 -7 dlv
8 -4 dlv
4 -4 dlv
4 -8 dlv
0 -12 dlv
-8 -8 dlv
-12 -4 dlv
-15 0 dlv
-12 4 dlv
-8 8 dlv
dle
1276 1842 dlt
31 -83 dlv
32 83 dlv
dle
1409 1830 dlt
-7 8 dlv
-12 4 dlv
-16 0 dlv
-12 -4 dlv
-8 -8 dlv
0 -8 dlv
4 -8 dlv
4 -4 dlv
8 -4 dlv
24 -7 dlv
8 -4 dlv
4 -4 dlv
3 -8 dlv
0 -12 dlv
-7 -8 dlv
-12 -4 dlv
-16 0 dlv
-12 4 dlv
-8 8 dlv
dle
1488 1830 dlt
-8 8 dlv
-12 4 dlv
-15 0 dlv
-12 -4 dlv
-8 -8 dlv
0 -8 dlv
4 -8 dlv
4 -4 dlv
8 -4 dlv
23 -7 dlv
8 -4 dlv
4 -4 dlv
4 -8 dlv
0 -12 dlv
-8 -8 dlv
-12 -4 dlv
-15 0 dlv
-12 4 dlv
-8 8 dlv
dle
3915 2090 dlt
32 -83 dlv
31 83 dlv
dle
3998 2007 dlt
0 83 dlv
28 0 dlv
11 -4 dlv
8 -8 dlv
4 -8 dlv
4 -12 dlv
0 -19 dlv
-4 -12 dlv
-4 -8 dlv
-8 -8 dlv
-11 -4 dlv
-28 0 dlv
dle
4081 2007 dlt
0 83 dlv
27 0 dlv
12 -4 dlv
8 -8 dlv
4 -8 dlv
4 -12 dlv
0 -19 dlv
-4 -12 dlv
-4 -8 dlv
-8 -8 dlv
-12 -4 dlv
-27 0 dlv
dle
1272 2090 dlt
31 -83 dlv
32 83 dlv
dle
1354 2007 dlt
0 83 dlv
28 0 dlv
12 -4 dlv
7 -8 dlv
4 -8 dlv
4 -12 dlv
0 -19 dlv
-4 -12 dlv
-4 -8 dlv
-7 -8 dlv
-12 -4 dlv
-28 0 dlv
dle
1437 2007 dlt
0 83 dlv
27 0 dlv
12 -4 dlv
8 -8 dlv
4 -8 dlv
4 -12 dlv
0 -19 dlv
-4 -12 dlv
-4 -8 dlv
-8 -8 dlv
-12 -4 dlv
-27 0 dlv
dle
3937 2491 dlt
-8 8 dlv
-12 4 dlv
-15 0 dlv
-12 -4 dlv
-8 -8 dlv
0 -8 dlv
4 -8 dlv
4 -4 dlv
8 -4 dlv
23 -7 dlv
8 -4 dlv
4 -4 dlv
4 -8 dlv
0 -12 dlv
-8 -8 dlv
-12 -4 dlv
-15 0 dlv
-12 4 dlv
-8 8 dlv
dle
3957 2503 dlt
19 -83 dlv
20 83 dlv
20 -83 dlv
19 83 dlv
dle
63 0 4047 2412 dls
4146 2487 dlt
7 4 dlv
12 12 dlv
0 -83 dlv
dle
3011 5394 dlt
31 -82 dlv
32 82 dlv
dle
3144 5383 dlt
-7 8 dlv
-12 3 dlv
-16 0 dlv
-12 -3 dlv
-8 -8 dlv
0 -8 dlv
4 -8 dlv
4 -4 dlv
8 -4 dlv
24 -8 dlv
8 -4 dlv
4 -4 dlv
3 -8 dlv
0 -11 dlv
-7 -8 dlv
-12 -4 dlv
-16 0 dlv
-12 4 dlv
-8 8 dlv
dle
3223 5383 dlt
-8 8 dlv
-12 3 dlv
-15 0 dlv
-12 -3 dlv
-8 -8 dlv
0 -8 dlv
4 -8 dlv
4 -4 dlv
8 -4 dlv
23 -8 dlv
8 -4 dlv
4 -4 dlv
4 -8 dlv
0 -11 dlv
-8 -8 dlv
-12 -4 dlv
-15 0 dlv
-12 4 dlv
-8 8 dlv
dle
3263 5956 dlt
31 -82 dlv
32 82 dlv
dle
55 -82 3341 5956 dls
-55 -82 3396 5956 dls
528 5956 dlt
31 -82 dlv
32 82 dlv
dle
611 5874 dlt
0 82 dlv
27 0 dlv
12 -4 dlv
8 -7 dlv
4 -8 dlv
4 -12 dlv
0 -20 dlv
-4 -12 dlv
-4 -8 dlv
-8 -7 dlv
-12 -4 dlv
-27 0 dlv
dle
693 5874 dlt
0 82 dlv
28 0 dlv
12 -4 dlv
7 -7 dlv
4 -8 dlv
4 -12 dlv
0 -20 dlv
-4 -12 dlv
-4 -8 dlv
-7 -7 dlv
-12 -4 dlv
-28 0 dlv
dle
4494 256 dlt
31 -83 dlv
32 83 dlv
dle
4576 216 dlt
36 0 dlv
12 -4 dlv
3 -4 dlv
4 -7 dlv
0 -12 dlv
-4 -8 dlv
-3 -4 dlv
-12 -4 dlv
-36 0 dlv
0 83 dlv
36 0 dlv
12 -4 dlv
3 -4 dlv
4 -8 dlv
0 -8 dlv
-4 -8 dlv
-3 -4 dlv
-12 -4 dlv
dle
4659 256 dlt
0 -59 dlv
4 -12 dlv
8 -8 dlv
12 -4 dlv
7 0 dlv
12 4 dlv
8 8 dlv
4 12 dlv
0 59 dlv
dle
4797 244 dlt
-8 8 dlv
-12 4 dlv
-16 0 dlv
-12 -4 dlv
-7 -8 dlv
0 -8 dlv
3 -8 dlv
4 -4 dlv
8 -4 dlv
24 -8 dlv
8 -4 dlv
4 -4 dlv
4 -7 dlv
0 -12 dlv
-8 -8 dlv
-12 -4 dlv
-16 0 dlv
-12 4 dlv
-7 8 dlv
dle
619 256 dlt
31 -83 dlv
32 83 dlv
dle
753 244 dlt
-8 8 dlv
-12 4 dlv
-16 0 dlv
-12 -4 dlv
-7 -8 dlv
0 -8 dlv
4 -8 dlv
3 -4 dlv
8 -4 dlv
24 -8 dlv
8 -4 dlv
4 -4 dlv
4 -7 dlv
0 -12 dlv
-8 -8 dlv
-12 -4 dlv
-16 0 dlv
-12 4 dlv
-7 8 dlv
dle
831 244 dlt
-8 8 dlv
-11 4 dlv
-16 0 dlv
-12 -4 dlv
-8 -8 dlv
0 -8 dlv
4 -8 dlv
4 -4 dlv
8 -4 dlv
24 -8 dlv
7 -4 dlv
4 -4 dlv
4 -7 dlv
0 -12 dlv
-8 -8 dlv
-11 -4 dlv
-16 0 dlv
-12 4 dlv
-8 8 dlv
dle
550 2392 dlt
-8 8 dlv
-12 4 dlv
-16 0 dlv
-12 -4 dlv
-7 -8 dlv
0 -8 dlv
3 -8 dlv
4 -4 dlv
8 -4 dlv
24 -8 dlv
8 -4 dlv
4 -3 dlv
4 -8 dlv
0 -12 dlv
-8 -8 dlv
-12 -4 dlv
-16 0 dlv
-12 4 dlv
-7 8 dlv
dle
569 2404 dlt
20 -83 dlv
20 83 dlv
19 -83 dlv
20 83 dlv
dle
63 0 660 2313 dls
758 2388 dlt
8 4 dlv
12 12 dlv
0 -83 dlv
dle
83 55 2424 1598 dls
83 -55 2424 1653 dls
2424 2647 dlt
40 32 dlv
43 0 dlv
dle
40 -31 2424 2710 dls
2023 2314 dlt
-8 -8 dlv
-4 -12 dlv
0 -16 dlv
4 -12 dlv
8 -7 dlv
8 0 dlv
8 3 dlv
4 4 dlv
4 8 dlv
7 24 dlv
4 8 dlv
4 4 dlv
8 4 dlv
12 0 dlv
8 -8 dlv
4 -12 dlv
0 -16 dlv
-4 -12 dlv
-8 -7 dlv
dle
2011 2333 dlt
83 20 dlv
-83 20 dlv
83 19 dlv
-83 20 dlv
dle
0 63 2102 2424 dls
2094 2514 dlt
-83 0 dlv
0 36 dlv
4 11 dlv
4 4 dlv
8 4 dlv
12 0 dlv
8 -4 dlv
4 -4 dlv
3 -11 dlv
0 -36 dlv
dle
2011 1838 dlt
83 31 dlv
-83 32 dlv
dle
2094 1920 dlt
-83 0 dlv
0 28 dlv
4 12 dlv
8 7 dlv
8 4 dlv
12 4 dlv
19 0 dlv
12 -4 dlv
8 -4 dlv
8 -7 dlv
4 -12 dlv
0 -28 dlv
dle
2094 2003 dlt
-83 0 dlv
0 27 dlv
4 12 dlv
8 8 dlv
8 4 dlv
12 4 dlv
19 0 dlv
12 -4 dlv
8 -4 dlv
8 -8 dlv
4 -12 dlv
0 -27 dlv
dle
2011 1590 dlt
83 31 dlv
-83 32 dlv
dle
2023 1723 dlt
-8 -7 dlv
-4 -12 dlv
0 -16 dlv
4 -12 dlv
8 -8 dlv
8 0 dlv
8 4 dlv
4 4 dlv
4 8 dlv
7 24 dlv
4 8 dlv
4 4 dlv
8 3 dlv
12 0 dlv
8 -7 dlv
4 -12 dlv
0 -16 dlv
-4 -12 dlv
-8 -8 dlv
dle
2023 1802 dlt
-8 -8 dlv
-4 -12 dlv
0 -15 dlv
4 -12 dlv
8 -8 dlv
8 0 dlv
8 4 dlv
4 4 dlv
4 8 dlv
7 23 dlv
4 8 dlv
4 4 dlv
8 4 dlv
12 0 dlv
8 -8 dlv
4 -12 dlv
0 -15 dlv
-4 -12 dlv
-8 -8 dlv
dle
83 55 5068 1598 dls
83 -55 5068 1653 dls
5068 2647 dlt
39 32 dlv
44 0 dlv
dle
39 -31 5068 2710 dls
4667 2314 dlt
-8 -8 dlv
-4 -12 dlv
0 -16 dlv
4 -12 dlv
8 -7 dlv
8 0 dlv
8 3 dlv
3 4 dlv
4 8 dlv
8 24 dlv
4 8 dlv
4 4 dlv
8 4 dlv
12 0 dlv
8 -8 dlv
4 -12 dlv
0 -16 dlv
-4 -12 dlv
-8 -7 dlv
dle
4655 2333 dlt
83 20 dlv
-83 20 dlv
83 19 dlv
-83 20 dlv
dle
0 63 4745 2424 dls
4738 2514 dlt
-83 0 dlv
0 36 dlv
4 11 dlv
4 4 dlv
8 4 dlv
12 0 dlv
7 -4 dlv
4 -4 dlv
4 -11 dlv
0 -36 dlv
dle
4655 1838 dlt
83 31 dlv
-83 32 dlv
dle
4738 1920 dlt
-83 0 dlv
0 28 dlv
4 12 dlv
8 7 dlv
8 4 dlv
11 4 dlv
20 0 dlv
12 -4 dlv
8 -4 dlv
8 -7 dlv
4 -12 dlv
0 -28 dlv
dle
4738 2003 dlt
-83 0 dlv
0 27 dlv
4 12 dlv
8 8 dlv
8 4 dlv
11 4 dlv
20 0 dlv
12 -4 dlv
8 -4 dlv
8 -8 dlv
4 -12 dlv
0 -27 dlv
dle
4655 1590 dlt
83 31 dlv
-83 32 dlv
dle
4667 1723 dlt
-8 -7 dlv
-4 -12 dlv
0 -16 dlv
4 -12 dlv
8 -8 dlv
8 0 dlv
8 4 dlv
3 4 dlv
4 8 dlv
8 24 dlv
4 8 dlv
4 4 dlv
8 3 dlv
12 0 dlv
8 -7 dlv
4 -12 dlv
0 -16 dlv
-4 -12 dlv
-8 -8 dlv
dle
4667 1802 dlt
-8 -8 dlv
-4 -12 dlv
0 -15 dlv
4 -12 dlv
8 -8 dlv
8 0 dlv
8 4 dlv
3 4 dlv
4 8 dlv
8 23 dlv
4 8 dlv
4 4 dlv
8 4 dlv
12 0 dlv
8 -8 dlv
4 -12 dlv
0 -15 dlv
-4 -12 dlv
-8 -8 dlv
dle
1061 5915 dpb
987 5841 dpv
888 5841 dpv
813 5915 dpv
888 5989 dpv
987 5989 dpv
dps
3705 5915 dpb
3631 5841 dpv
3531 5841 dpv
3457 5915 dpv
3531 5989 dpv
3631 5989 dpv
dps
1144 214 dpb
1069 140 dpv
970 140 dpv
896 214 dpv
970 289 dpv
1069 289 dpv
dps
5109 214 dpb
5035 140 dpv
4936 140 dpv
4862 214 dpv
4936 289 dpv
5035 289 dpv
dps
896 2288 dpb
896 2437 dpv
987 2437 dpv
1061 2362 dpv
987 2288 dpv
dps
2350 1173 2416 1239 dbs
1606 1668 1672 1734 dbs
1606 1916 1672 1982 dbs
1606 2329 1672 2395 dbs
2350 3073 2416 3139 dbs
4994 1173 5060 1239 dbs
4250 1668 4316 1734 dbs
4250 1916 4316 1982 dbs
4250 2329 4316 2395 dbs
4994 3073 5060 3139 dbs
3738 5469 dpb
3672 5469 dpv
3672 5535 dpv
3738 5535 dpv
dps
3738 4973 dpb
3672 4973 dpv
3672 5039 dpv
3738 5039 dpv
dps
3573 5221 dpb
3507 5221 dpv
3507 5287 dpv
3573 5287 dpv
dps
475 0 5523 6000 clwin
gfs
%%Trailer
%%EOF
